variables:
  MIRROR_REPO: git@github.com:thm-projects/arsnova-flashcards.git

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)

staging:
  stage: test
  script:
    - ssh-add <(echo "$STAGING_SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh $STAGING_USER@$STAGING_HOST "cd flashcards/; git fetch --all; git reset --hard origin/$CI_BUILD_REF_NAME"
  tags:
    - nodejs

production:
  stage: deploy
  script:
    - ssh-add <(echo "$PRODUCTION_SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh $PRODUCTION_USER@$PRODUCTION_HOST 'cd flashcards/; git fetch --all; git reset --hard origin/master'
  only:
    - master
  tags:
    - nodejs
    
before_script:

sync_mirror:
  stage: deploy
  tags:
    - git
  when: always
  allow_failure: true
  dependencies: []
  script:
    - eval $(ssh-agent -s)
    - mkdir ~/.ssh && echo "$SYNC_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - ssh-add <(echo "$SYNC_SSH_PRIVATE_KEY")
    - git clone --bare "$CI_BUILD_REPO" mirror.git
    - cd mirror.git
    - git push --mirror "$MIRROR_REPO"